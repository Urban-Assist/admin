# .github/workflows/email-ci.yaml
name: Email Service CI/CD

on:
  push:
    
    branches: [ main ]
  pull_request:
     
    branches: [ main ]

env:
  IMAGE_NAME: admin
  DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      working-directory: ./
      run: npm ci
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
    - name: Build and push Docker image
      working-directory: ./
      run: |
      
        docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$GITHUB_SHA .
        docker push $DOCKER_USERNAME/$IMAGE_NAME:$GITHUB_SHA

        # Tag as latest for local development
        docker tag $DOCKER_USERNAME/$IMAGE_NAME:$GITHUB_SHA $DOCKER_USERNAME/$IMAGE_NAME:latest
        docker push $DOCKER_USERNAME/$IMAGE_NAME:latest
        
    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Configure kubectl for Minikube
      run: |
        # Since this machine is the action runner with Minikube running locally
        # We can simply use the local Minikube configuration
        
        # Set up kubectl to use the ingress-ua context
        kubectl config set-cluster ingress-ua --server=https://192.168.49.2:8443 --insecure-skip-tls-verify=true
        kubectl config set-context ingress-ua --cluster=ingress-ua --user=ingress-ua
        kubectl config use-context ingress-ua
        
        # If kubectl is already configured locally (since this is the runner machine)
        # we might not need the above steps, and can just verify the connection
        
    - name: Verify kubectl connection
      run: kubectl cluster-info
        
    - name: Apply Kubernetes configurations
      run: |
        kubectl apply -f k8s/
        
    - name: Restart admin service
      run: |
        kubectl rollout restart deployment admin-deployment
        kubectl rollout status deployment admin-deployment

  deploy-kubernetes:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Placeholder
        run: echo "This job can be expanded for more specific kubernetes deployments"


